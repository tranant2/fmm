# This is the build file for project "fmm"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.7.1

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C++ object $out

# Rules for linking.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /Users/anthonytran/miniconda3/bin/meson --internal regenerate /Users/anthonytran/fmm /Users/anthonytran/fmm/builddir --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build src/fmm.p/main.cpp.o: cpp_COMPILER ../src/main.cpp
 DEPFILE = src/fmm.p/main.cpp.o.d
 DEPFILE_UNQUOTED = src/fmm.p/main.cpp.o.d
 ARGS = -Isrc/fmm.p -Isrc -I../src -Iinclude -I../include -Xclang -fcolor-diagnostics --coverage -pipe -Wall -Winvalid-pch -Wnon-virtual-dtor -Wextra -Wpedantic -std=c++14 -g

build src/fmm.p/quadtree.cpp.o: cpp_COMPILER ../src/quadtree.cpp
 DEPFILE = src/fmm.p/quadtree.cpp.o.d
 DEPFILE_UNQUOTED = src/fmm.p/quadtree.cpp.o.d
 ARGS = -Isrc/fmm.p -Isrc -I../src -Iinclude -I../include -Xclang -fcolor-diagnostics --coverage -pipe -Wall -Winvalid-pch -Wnon-virtual-dtor -Wextra -Wpedantic -std=c++14 -g

build src/fmm: cpp_LINKER src/fmm.p/main.cpp.o src/fmm.p/quadtree.cpp.o
 LINK_ARGS = --coverage -Wl,-dead_strip_dylibs -Wl,-headerpad_max_install_names -Wl,-undefined,error

build cov: phony meson-cov

build meson-cov: CUSTOM_COMMAND 
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal commandrunner /Users/anthonytran/fmm /Users/anthonytran/fmm/builddir '' /Users/anthonytran/miniconda3/bin/meson ./build_scripts/generate_coverage_report
 description = Running$ external$ command$ cov
 pool = console

build clang-tidy: phony meson-clang-tidy

build meson-clang-tidy: CUSTOM_COMMAND 
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal commandrunner /Users/anthonytran/fmm /Users/anthonytran/fmm/builddir '' /Users/anthonytran/miniconda3/bin/meson ./build_scripts/tidy.sh
 description = Running$ external$ command$ clang-tidy
 pool = console

build cppcheck: phony meson-cppcheck

build meson-cppcheck: CUSTOM_COMMAND 
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal commandrunner /Users/anthonytran/fmm /Users/anthonytran/fmm/builddir '' /Users/anthonytran/miniconda3/bin/meson cppcheck --enable=all --std=c++14 --error-exitcode=1 --suppress=missingInclude src test
 description = Running$ external$ command$ cppcheck
 pool = console

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /Users/anthonytran/miniconda3/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /Users/anthonytran/miniconda3/bin/meson dist
 pool = console

build dist: phony meson-dist

# Coverage rules

build meson-coverage: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal coverage /Users/anthonytran/fmm /Users/anthonytran/fmm/subprojects /Users/anthonytran/fmm/builddir /Users/anthonytran/fmm/builddir/meson-logs
 description = Generates$ coverage$ reports

build coverage: phony meson-coverage

build meson-coverage-xml: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal coverage --xml /Users/anthonytran/fmm /Users/anthonytran/fmm/subprojects /Users/anthonytran/fmm/builddir /Users/anthonytran/fmm/builddir/meson-logs
 description = Generates$ XML$ coverage$ report

build coverage-xml: phony meson-coverage-xml

build meson-coverage-text: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal coverage --text /Users/anthonytran/fmm /Users/anthonytran/fmm/subprojects /Users/anthonytran/fmm/builddir /Users/anthonytran/fmm/builddir/meson-logs
 description = Generates$ text$ coverage$ report

build coverage-text: phony meson-coverage-text

build meson-coverage-html: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal coverage --html /Users/anthonytran/fmm /Users/anthonytran/fmm/subprojects /Users/anthonytran/fmm/builddir /Users/anthonytran/fmm/builddir/meson-logs
 description = Generates$ HTML$ coverage$ report

build coverage-html: phony meson-coverage-html

# Suffix

build meson-ctags: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal tags ctags /Users/anthonytran/fmm
 pool = console

build ctags: phony meson-ctags

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony src/fmm

build clean: phony meson-clean

build meson-clean-gcno: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal delwithsuffix . gcno
 description = Deleting$ gcno$ files

build clean-gcno: phony meson-clean-gcno

build meson-clean-gcda: CUSTOM_COMMAND PHONY
 COMMAND = /Users/anthonytran/miniconda3/bin/meson --internal delwithsuffix . gcda
 description = Deleting$ gcda$ files

build clean-gcda: phony meson-clean-gcda

build meson-clean: CUSTOM_COMMAND PHONY | clean-gcda clean-gcno
 COMMAND = /usr/local/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../include/meson.build ../src/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../include/meson.build ../src/meson.build meson-private/coredata.dat: phony 

default all

